# Dockerfile for RTPproxy extractaudio tool with full codec support
FROM debian:bookworm-slim AS build

LABEL maintainer="Ihor Olkhovskyi w/assistance"
LABEL description="RTPproxy extractaudio tool with full codec support (GSM, G.722, G.729)"

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install build dependencies
RUN apt-get update -qq && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    autoconf \
    automake \
    libtool \
    pkg-config \
    make \
    cmake \
    libc6-dev \
    libsndfile1-dev \
    libgsm1-dev \
    libbcg729-dev \
    libopus-dev \
    ca-certificates \
    curl \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Build and install libg722 from source (not available in Debian repos)
WORKDIR /tmp/libg722
RUN wget -O - https://github.com/sippy/libg722/archive/refs/heads/master.tar.gz | tar xz --strip-components=1 \
    && make \
    && make install \
    && ldconfig

# Copy source code with our modifications
COPY . /rtpproxy/
WORKDIR /rtpproxy

# Configure with all codec support enabled
RUN ./configure \
    --enable-librtpproxy \
    CPPFLAGS="-I/usr/local/include" \
    LDFLAGS="-L/usr/local/lib" \
    PKG_CONFIG_PATH="/usr/local/lib/pkgconfig"

# Build the project
RUN make clean && make -j$(nproc)

# Verify codec support is enabled
RUN cd extractaudio && \
    echo "Checking linked libraries:" && \
    ldd ./extractaudio && \
    echo "Checking for codec strings:" && \
    strings ./extractaudio | grep -E "(g729|g722|gsm|opus|force-codec)" && \
    echo "Testing help output:" && \
    ./extractaudio 2>&1 | head -10

# Runtime stage
FROM debian:bookworm-slim AS runtime

# Install runtime dependencies including tshark, tcpreplay and python for PCAP conversion
RUN apt-get update -qq && apt-get install -y --no-install-recommends \
    libsndfile1 \
    libgsm1 \
    libbcg729-0 \
    libopus0 \
    tshark \
    tcpreplay \
    python3 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy libg722 from build stage
COPY --from=build /usr/local/lib/libg722.* /usr/local/lib/
RUN ldconfig

# Copy the built extractaudio binary, wrapper script, and conversion tools
COPY --from=build /rtpproxy/extractaudio/extractaudio /usr/local/bin/extractaudio
COPY --from=build /rtpproxy/extractaudio-wrapper.sh /usr/local/bin/extractaudio-wrapper.sh
COPY --from=build /rtpproxy/pcap_converter.py /usr/local/bin/pcap_converter.py
RUN chmod +x /usr/local/bin/extractaudio-wrapper.sh /usr/local/bin/pcap_converter.py

# Create a non-root user for security
RUN useradd -r -s /bin/false -d /data extractaudio

# Set working directory for input/output files
WORKDIR /data
RUN chown extractaudio:extractaudio /data

# Switch to non-root user
USER extractaudio

# Verify installation and show available codecs
RUN extractaudio 2>&1 | grep -A10 -B5 "force-codec\|CODEC:" || true

# Set the default entrypoint to a shell to allow script execution
ENTRYPOINT ["/bin/bash", "-c"]
CMD ["/usr/local/bin/extractaudio"]